service: backpacs
provider:
  profile: allyn-backpac
  name: aws
  runtime: nodejs14.x
  region: ${opt:region, 'us-east-2'}
  stage: ${opt:stage, 'goerli'} 
  memorySize: 128
  timeout: 30
  lambdaHashingVersion: 20201221
  deploymentBucket:
    name: service.backpac.nodejs.lambdas.backpacs.${self:provider.stage}
  environment:
    STAGE:  ${opt:stage,'dev'}
    REGION: ${opt:region, self:provider.region}
    ACCOUNTID: ${file(config.${self:provider.stage}.json):AWS_ACT_ID} 
    ALCHEMY_API_KEY: ${file(config.${self:provider.stage}.json):ALCHEMY_API_KEY} 
    ALCHEMY_POLY_API_KEY: ${file(config.${self:provider.stage}.json):ALCHEMY_POLY_API_KEY} 
    ALCHEMY_HTTP: ${file(config.${self:provider.stage}.json):ALCHEMY_HTTP} 
    ALCHEMY_POLY_BASE_URL: ${file(config.${self:provider.stage}.json):ALCHEMY_POLY_BASE_URL}
    ALCHEMY_POLY_BASE_API_URL: ${file(config.${self:provider.stage}.json):ALCHEMY_POLY_BASE_API_URL}
    ALCHEMY_POLY_HTTP: ${file(config.${self:provider.stage}.json):ALCHEMY_POLY_HTTP}
    ALCHEMY_POLY_WSS: ${file(config.${self:provider.stage}.json):ALCHEMY_POLY_WSS}
    IPFS_PUBLIC_URL: ${file(config.${self:provider.stage}.json):IPFS_PUBLIC_URL}
    IPFS_PROJECT_ID: ${file(config.${self:provider.stage}.json):IPFS_PROJECT_ID}
    IPFS_PROJECT_KEY: ${file(config.${self:provider.stage}.json):IPFS_PROJECT_KEY}
    IPFS_PORT: ${file(config.${self:provider.stage}.json):IPFS_PORT}
    IPFS_DEDICATED_GATEWAY: ${file(config.${self:provider.stage}.json):IPFS_DEDICATED_GATEWAY}
    PINATA_KEY: ${file(config.${self:provider.stage}.json):PINATA_KEY}
    PINATA_SC: ${file(config.${self:provider.stage}.json):PINATA_SC}
    PINATA_TK: ${file(config.${self:provider.stage}.json):PINATA_TK}
    IPFS_GATEWAY: ${file(config.${self:provider.stage}.json):IPFS_GATEWAY}
    IPFS_GATEWAY_HOST: ${file(config.${self:provider.stage}.json):IPFS_GATEWAY_HOST}
    IPFS_DEDICATED_HOST: ${file(config.${self:provider.stage}.json):IPFS_DEDICATED_HOST} 
    SNS_TOPIC_USER_CREATION: UserCreation-${self:service}-${opt:stage, self:provider.stage}
    PACKS_BUCKET: ${self:service}-${opt:stage, self:provider.stage}-packs
    ASSET_UPLOAD_BUCKET: ${self:service}-${opt:stage, self:provider.stage}-asset-uploads
    DYNAMODB_TABLE_PACKSMASTER: ${self:service}-${opt:stage, self:provider.stage}-packsmaster
    DYNAMODB_TABLE_PACKSMASTER_MAN: ${self:service}-${opt:stage, self:provider.stage}-packmaster-man
    DYNAMODB_TABLE_PACKS: ${self:service}-${opt:stage, self:provider.stage}-packs
    DYNAMODB_TABLE_PACK_MAN: ${self:service}-${opt:stage, self:provider.stage}-pack-man
    DYNAMODB_TABLE_BACKPAC: ${self:service}-${opt:stage, self:provider.stage}-backpac
    DYNAMODB_TABLE_BACKPAC_INDEX: ${self:service}-${opt:stage, self:provider.stage}-backpac-address-index
    DYNAMODB_TABLE_DEVELOPER_MINT: backpac-api-${opt:stage, self:provider.stage}-developer-mint
    DYNAMODB_TABLE_DEVELOPER_CONTRACT: backpac-api-${opt:stage, self:provider.stage}-developer-contract
    DYNAMODB_TABLE_USER_CLAIMABLE: ${self:service}-${opt:stage, self:provider.stage}-user-claimable
    DYNAMODB_TABLE_USER_CLAIMABLE_INDEX: ${self:service}-${opt:stage, self:provider.stage}-user-claimable-chainContractAddress-index
    DYNAMODB_TABLE_USER: backpac-${opt:stage, self:provider.stage}-user
    DYNAMODB_TABLE_USER_EMAIL_ISSUER_INDEX: backpac-${opt:stage, self:provider.stage}-user-email-issuer-index
    DYNAMODB_TABLE_DEVELOPER_CONTRACT_REGION: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - s3:PutObject
      Resource: 
        - "arn:aws:s3:::${opt:stage, self:provider.stage}:${self:provider.environment.PACKS_BUCKET}/*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:PutItem
      Resource: 
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_BACKPAC}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_BACKPAC}/index/*"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PACKS}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PACKS}/index/*"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PACK_MAN}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PACK_MAN}/index/*"
package:
  individually: false
functions:
  - ${file(./functions/packmaster.yml)} 
  - ${file(./functions/packs.yml)}  
  - ${file(./functions/collection.yml)}  
  - ${file(./functions/asset.yml)}
stepFunctions: 
  validate: false
  stateMachines:
    assetMint:
      ${file(./statemachines/asset-mint-machine.yml)}
    backpacCreate:
      ${file(./statemachines/backpac-create-machine.yml)}
    collectionCreate:
      ${file(./statemachines/collection-create-machine.yml)}
resources:
  Outputs:
    CollectionCreateStateMachineArn:
        Value:
          Ref: CollectionCreationStateMachine
        Export:
          Name: ${self:service}-${opt:stage, self:provider.stage}-CollectionCreationStateMachineArn
    BackpacCreateStateMachineArn:
        Value:
          Ref: BackpacCreationStateMachine
        Export:
          Name: ${self:service}-${opt:stage, self:provider.stage}-BackpacCreateStateMachineArn
    BackpacTableName:
        Value:
          Ref: BackpacDynamoDBTable
        Export:
          Name: ${self:service}-${opt:stage, self:provider.stage}-BackpacTableName
    BackpacTableArn:
        Value: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_BACKPAC}/index/*"
        Export:
          Name: ${self:service}-${opt:stage, self:provider.stage}-BackpacTableArn
  Resources: 
    AssetUploadEncryptedBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.ASSET_UPLOAD_BUCKET}
    PacksEncryptedBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.PACKS_BUCKET}
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
    PacksMasterDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: chain
            AttributeType: S
          -  
            AttributeName: hash
            AttributeType: S
        KeySchema:
          -
            AttributeName: chain
            KeyType: HASH
          -
            AttributeName: hash
            KeyType: RANGE      
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE_PACKSMASTER}
    PackMastermanDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: chainIssuer
            AttributeType: S
          -  
            AttributeName: hash
            AttributeType: S
        KeySchema:
          -
            AttributeName: chainIssuer
            KeyType: HASH
          -
            AttributeName: hash
            KeyType: RANGE      
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE_PACKSMASTER_MAN}
    PacksDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: chainIssuer
            AttributeType: S
          -  
            AttributeName: hash
            AttributeType: S
        KeySchema:
          -
            AttributeName: chainIssuer
            KeyType: HASH
          -
            AttributeName: hash
            KeyType: RANGE      
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE_PACKS}
    PackmanDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: chainIssuer
            AttributeType: S
          -  
            AttributeName: hash
            AttributeType: S
        KeySchema:
          -
            AttributeName: chainIssuer
            KeyType: HASH
          -
            AttributeName: hash
            KeyType: RANGE      
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE_PACK_MAN}
    BackpacDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: chainIssuer
            AttributeType: S
          -  
            AttributeName: hash
            AttributeType: S
          -  
            AttributeName: address
            AttributeType: S
        KeySchema:
          -
            AttributeName: chainIssuer
            KeyType: HASH
          -
            AttributeName: hash
            KeyType: RANGE      
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.DYNAMODB_TABLE_BACKPAC_INDEX}
            KeySchema:
              - AttributeName: chainIssuer
                KeyType: HASH
              - AttributeName: address
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - created
                - name
                - updatedAt
                - isoDate
            ProvisionedThroughput:
              ReadCapacityUnits: ${self:custom.tableThroughput}
              WriteCapacityUnits: ${self:custom.tableThroughput}  
        TableName: ${self:provider.environment.DYNAMODB_TABLE_BACKPAC}
    UserClaimableDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: email
            AttributeType: S
          -  
            AttributeName: mintId
            AttributeType: S
          -  
            AttributeName: chainContractAddress
            AttributeType: S
        KeySchema:
          -
            AttributeName: email
            KeyType: HASH
          -
            AttributeName: mintId
            KeyType: RANGE      
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.DYNAMODB_TABLE_USER_CLAIMABLE_INDEX}
            KeySchema:
              - AttributeName: chainContractAddress
                KeyType: HASH
              - AttributeName: email
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: ${self:custom.tableThroughput}
              WriteCapacityUnits: ${self:custom.tableThroughput}  
        TableName: ${self:provider.environment.DYNAMODB_TABLE_USER_CLAIMABLE}
custom:
   tableThroughput: 1
   prune:
     automatic: true
     number: 5   
plugins:
  - serverless-offline
  - serverless-prune-plugin
  - serverless-step-functions
  - serverless-iam-roles-per-function