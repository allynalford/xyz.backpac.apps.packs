service: backpacs
provider:
  profile: allyn-backpac
  name: aws
  runtime: nodejs14.x
  region: ${opt:region, 'us-east-2'}
  stage: ${opt:stage, 'dev'} 
  memorySize: 128
  timeout: 30
  lambdaHashingVersion: 20201221
  deploymentBucket:
    name: service.backpac.nodejs.lambdas.backpacs.${self:provider.stage}
  environment:
    STAGE:  ${opt:stage,'dev'}
    REGION: ${opt:region, self:provider.region}
    ACCOUNTID: ${file(config.${self:provider.stage}.json):AWS_ACT_ID} 
    SNS_TOPIC_USER_CREATION: UserCreation-${self:service}-${opt:stage, self:provider.stage}
    PACKS_BUCKET: ${self:service}-${opt:stage, self:provider.stage}-packs
    DYNAMODB_TABLE_PACKS: ${self:service}-${opt:stage, self:provider.stage}-packs
    DYNAMODB_TABLE_PACK_MAN: ${self:service}-${opt:stage, self:provider.stage}-pack-man
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - s3:PutObject
      Resource: 
        - "arn:aws:s3:::${opt:stage, self:provider.stage}:${self:provider.environment.PACKS_BUCKET}/*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:PutItem
      Resource: 
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PACKS}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PACKS}/index/*"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PACK_MAN}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PACK_MAN}/index/*"
package:
  individually: false
functions:
  - ${file(./functions/packs.yml)}    
stepFunctions: 
  validate: false
  stateMachines:
    backpac:
      ${file(./statemachines/backpac-create-machine.yml)}
resources:
  Outputs:
    BackpacCreateStateMachineArn:
        Value:
          Ref: BackpacCreationStateMachine
        Export:
          Name: BackpacCreateStateMachineArn-${self:provider.stage}
  Resources: 
    PacksEncryptedBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.PACKS_BUCKET}
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
    PacksDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: chainIssuer
            AttributeType: S
          -  
            AttributeName: hash
            AttributeType: S
        KeySchema:
          -
            AttributeName: chainIssuer
            KeyType: HASH
          -
            AttributeName: hash
            KeyType: RANGE      
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE_PACKS}
    PackmanDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: chainIssuer
            AttributeType: S
          -  
            AttributeName: hash
            AttributeType: S
        KeySchema:
          -
            AttributeName: chainIssuer
            KeyType: HASH
          -
            AttributeName: hash
            KeyType: RANGE      
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE_PACK_MAN}
custom:
   tableThroughput: 1
   prune:
     automatic: true
     number: 5   
plugins:
  - serverless-offline
  - serverless-prune-plugin
  - serverless-step-functions
  - serverless-iam-roles-per-function